---
- name: Update package list
  apt: update_cache=yes

- name: Upgrade installed packages on this server
  apt: upgrade=dist # set to full if you want a dist-upgrade

- name: Check if a reboot is required
  stat: path=/var/run/reboot-required get_md5=no
  register: file

# The following two tasks have not been completely vetted
- name: Reboot the server
  become: true
  shell: sleep 2 && /sbin/shutdown -r now "All packages upgraded"
  async: 1
  poll: 0
  ignore_errors: true
  when: file.stat.exists == true and ansible_vagrant_mode is defined and ansible_vagrant_mode != "ansible_local"

- name: Wait for server to come back
  local_action: wait_for
  args:
    host: "{{inventory_hostname}}"
    port: 22
    state: started
    delay: 30
    timeout: 300
  when: file.stat.exists == true and ansible_vagrant_mode is defined and ansible_vagrant_mode != "ansible_local"

- name: Install https apt transport package
  apt: pkg=apt-transport-https state=latest update_cache=yes
  when: ansible_lsb.codename == "xenial"

- name: Install 'linux-image-extra' package if we're on Ubuntu trusty
  apt: pkg=linux-image-extra-{{ansible_kernel}} state=present
  when: ansible_lsb.codename == "trusty"

- name: Install aptitude using apt
  apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

- name: Install required system packages for Docker
  apt: name={{ docker_required_packages }} state=latest update_cache=yes

- name: Import Docker GPG key
  apt_key:
    url: "{{ docker_gpg_url }}"
    state: present

- name: Add docker repo
  apt_repository: repo='deb {{docker_repo}} bionic stable' state=present

- name: Install Docker
  apt: name={{ docker_packages }} state=latest update_cache=yes

- name: Add user to docker group
  user: name={{ansible_ssh_user}} groups=docker append=yes
